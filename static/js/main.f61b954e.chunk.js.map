{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onSubmit","this","props","submitTodoHandler","className","onChange","inputTextHandler","value","inputText","type","statusHandler","name","status","React","Component","Todo","completed","text","onClick","completeHandler","id","deleteTodoHandler","TodoList","Object","keys","filteredTodos","map","key","App","_updateStates","todos","setState","_filterTodos","todosAsArray","entries","completedFilter","filter","fromEntries","uncompletedFilter","_createNewTodo","state","Date","now","_clearInputText","_saveLocalTodos","localStorage","setItem","JSON","stringify","_getLocalTodos","getItem","todoLocal","parse","e","target","preventDefault","componentDidMount","componentDidUpdate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f61b954e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Form extends React.Component{    \r\n    render(){\r\n        return(\r\n            <form onSubmit={this.props.submitTodoHandler}>                \r\n                <div className=\"input\">\r\n                    <input onChange={this.props.inputTextHandler} value={this.props.inputText} type=\"text\" className=\"todo-input\"/>      \r\n                    <button type=\"submit\" className='todo-button'>\r\n                        <i className=\"fas fa-plus-square\"></i>\r\n                    </button> \r\n                </div>\r\n                <div className=\"select\">\r\n                    <select onChange={this.props.statusHandler} name=\"todos\" className=\"filter-todo\" value={this.props.status}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"completed\">Completed</option>\r\n                        <option value=\"uncompleted\">Uncompleted</option>\r\n                    </select>\r\n                </div>\r\n            </form> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nclass Todo extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"todo\">\r\n                <li className={`todo-item ${this.props.completed ? \"completed\" : \"\"}`}>{this.props.text}</li>\r\n                <button className=\"complete-btn\" onClick={() => this.props.completeHandler(this.props.id)}><i className=\"fas fa-check\"></i></button>\r\n                <button className=\"trash-btn\" onClick={() => this.props.deleteTodoHandler(this.props.id)}><i className=\"fas fa-trash\"></i></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nclass TodoList extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {Object.keys(this.props.filteredTodos).map(key => <Todo key={key} id={key} text={this.props.filteredTodos[key].text} completed={this.props.filteredTodos[key].completed} deleteTodoHandler={this.props.deleteTodoHandler} completeHandler={this.props.completeHandler} /> )}                    \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport './App.css';\r\nimport Form from './components/Form';\r\nimport TodoList from './components/TodoList';\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            inputText: '',\r\n            todos: {},\r\n            status: 'all',\r\n            filteredTodos: {}\r\n        };\r\n    }\r\n\r\n    _updateStates = (todos,filteredTodos,status) => {\r\n        this.setState({\r\n            todos,\r\n            filteredTodos,\r\n            status\r\n        })\r\n    }\r\n    _filterTodos = (todos,status) => {\r\n        const todosAsArray = Object.entries(todos);\r\n        let filteredTodos = {};\r\n        if(status === 'completed'){\r\n            const completedFilter = todosAsArray.filter(([key,todo]) => todo.completed === true);\r\n            filteredTodos = Object.fromEntries(completedFilter);\r\n        }else if(status === 'uncompleted'){\r\n            const uncompletedFilter = todosAsArray.filter(([key,todo]) => todo.completed === false);\r\n            filteredTodos = Object.fromEntries(uncompletedFilter);\r\n        }else{\r\n            filteredTodos = todos;\r\n        }\r\n        this._updateStates(todos,filteredTodos,status);\r\n\r\n    }\r\n    _createNewTodo = () => {\r\n        const todos = {...this.state.todos};\r\n        const status = this.state.status;\r\n        todos[`todo${Date.now()}`] = {text: this.state.inputText, completed: false};\r\n        this._filterTodos(todos,status);\r\n    }\r\n    _clearInputText = () =>{\r\n        this.setState({\r\n            inputText: ''\r\n        });\r\n    }\r\n    _saveLocalTodos = () => {\r\n        localStorage.setItem('todos',JSON.stringify(this.state.todos));\r\n    }\r\n    _getLocalTodos = () => {\r\n        if(localStorage.getItem('todos') === null){\r\n            localStorage.setItem('todos',JSON.stringify([]));\r\n        }else{\r\n            const todoLocal = JSON.parse(localStorage.getItem('todos'));\r\n            const status = 'all';\r\n            this._filterTodos(todoLocal,status);\r\n        }\r\n    }\r\n\r\n    inputTextHandler = (e) => {\r\n        const inputText = e.target.value;\r\n        this.setState({\r\n            inputText: inputText\r\n        });\r\n    }\r\n    submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        this._createNewTodo();\r\n        this._clearInputText();\r\n    }\r\n    deleteTodoHandler = (id) => {\r\n        const todos = {...this.state.todos};\r\n        const status = this.state.status;\r\n        delete todos[id];\r\n        this._filterTodos(todos,status);\r\n    }\r\n    completeHandler = (id) => {\r\n        const todos = {...this.state.todos};\r\n        const status = this.state.status;\r\n        todos[id].completed = !todos[id].completed;\r\n        this._filterTodos(todos,status);\r\n    }\r\n    statusHandler = (e) => {   \r\n        const todos = {...this.state.todos};\r\n        const status = e.target.value;\r\n        this._filterTodos(todos,status);\r\n    }\r\n    componentDidMount = () => {\r\n        this._getLocalTodos();\r\n    }\r\n    componentDidUpdate = () =>{\r\n        this._saveLocalTodos();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n                <header>\r\n                    <h1>Todo List</h1>\r\n                </header>\r\n                <main>\r\n                    <Form inputText={this.state.inputText} inputTextHandler={this.inputTextHandler} submitTodoHandler={this.submitTodoHandler} status={this.state.status} statusHandler={this.statusHandler} />\r\n                    <TodoList filteredTodos={this.state.filteredTodos} deleteTodoHandler={this.deleteTodoHandler} completeHandler={this.completeHandler} />\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}